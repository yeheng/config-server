//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "app_chat_whisper_history")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub msg_type: String,
    #[sea_orm(column_type = "Text")]
    pub content: String,
    pub length: Option<i64>,
    #[sea_orm(column_type = "Text", nullable)]
    pub file_name: Option<String>,
    pub file_type: Option<String>,
    pub from_user_id: i64,
    pub from_user_name: String,
    pub from_nick_name: String,
    pub from_user_type: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub from_user_avatar: Option<String>,
    pub from_level_id: Option<i64>,
    pub from_level_name: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub from_level_avatar: Option<String>,
    pub from_dept_id: Option<i64>,
    pub from_dept_name: Option<String>,
    pub from_dept_indx: Option<i16>,
    pub from_lecturer_name: Option<String>,
    pub from_lecturer_level: Option<i16>,
    pub from_lecturer_card_no: Option<String>,
    pub to_user_id: i64,
    pub to_user_name: String,
    pub to_nick_name: String,
    pub to_user_type: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub to_user_avatar: Option<String>,
    pub to_level_id: Option<i64>,
    pub to_level_name: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub to_level_avatar: Option<String>,
    pub to_dept_id: Option<i64>,
    pub to_dept_name: Option<String>,
    pub to_dept_indx: Option<i16>,
    pub to_lecturer_name: Option<String>,
    pub to_lecturer_level: Option<i16>,
    pub to_lecturer_card_no: Option<String>,
    pub client_ip: Option<String>,
    pub client_address: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub client_agent: Option<String>,
    pub status: i16,
    pub created_by: i64,
    pub created_time: DateTime,
    pub updated_by: i64,
    pub updated_time: DateTime,
    pub del_flag: i16,
    pub ref_user_name: Option<String>,
    pub ref_nick_name: Option<String>,
    pub ref_msg_type: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub ref_content: Option<String>,
    pub ref_file_type: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub ref_file_name: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
